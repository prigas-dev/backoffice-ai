{
  "queries": [
    {
      "sql": "SELECT t.*, u.name as assigned_user_name, c.name as category_name FROM tasks t LEFT JOIN user_tasks ut ON t.id = ut.task_id LEFT JOIN users u ON ut.user_id = u.id LEFT JOIN task_categories tc ON t.id = tc.task_id LEFT JOIN categories c ON tc.category_id = c.id WHERE t.status = 'todo' AND t.deleted_at IS NULL ORDER BY t.due_date ASC",
      "mode": "multiple-rows",
      "mapToProp": "tasks"
    }
  ],
  "component": {
    "id": "todo_tasks_list",
    "code": "import React, { useState } from 'react';\nimport { Table, Badge, Button, Modal, Form } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\n\ninterface Task {\n  id: number;\n  title: string;\n  description: string;\n  status: string;\n  priority: number;\n  due_date: string;\n  assigned_user_name: string | null;\n  category_name: string | null;\n}\n\ninterface ComponentProps {\n  tasks: Task[];\n}\n\nexport const Component: React.FC\u003cComponentProps\u003e = ({ tasks }) =\u003e {\n  const [selectedTask, setSelectedTask] = useState\u003cTask | null\u003e(null);\n  const [showModal, setShowModal] = useState(false);\n\n  const handleClose = () =\u003e {\n    setShowModal(false);\n    setSelectedTask(null);\n  };\n\n  const handleShow = (task: Task) =\u003e {\n    setSelectedTask(task);\n    setShowModal(true);\n  };\n\n  const getPriorityBadge = (priority: number) =\u003e {\n    switch (priority) {\n      case 1:\n        return \u003cBadge bg=\"success\"\u003eLow\u003c/Badge\u003e;\n      case 2:\n        return \u003cBadge bg=\"warning\"\u003eMedium\u003c/Badge\u003e;\n      case 3:\n        return \u003cBadge bg=\"danger\"\u003eHigh\u003c/Badge\u003e;\n      default:\n        return \u003cBadge bg=\"secondary\"\u003eUnknown\u003c/Badge\u003e;\n    }\n  };\n\n  const formatDate = (dateString: string) =\u003e {\n    if (!dateString) return 'No due date';\n    const date = new Date(dateString);\n    return date.toLocaleDateString();\n  };\n\n  const isOverdue = (dateString: string) =\u003e {\n    if (!dateString) return false;\n    const dueDate = new Date(dateString);\n    const today = new Date();\n    return dueDate \u003c today;\n  };\n\n  return (\n    \u003cdiv className=\"container mt-4\"\u003e\n      \u003ch2\u003eTodo Tasks\u003c/h2\u003e\n      {tasks.length === 0 ? (\n        \u003cdiv className=\"alert alert-info\"\u003eNo todo tasks found.\u003c/div\u003e\n      ) : (\n        \u003cTable striped bordered hover responsive\u003e\n          \u003cthead\u003e\n            \u003ctr\u003e\n              \u003cth\u003eTitle\u003c/th\u003e\n              \u003cth\u003ePriority\u003c/th\u003e\n              \u003cth\u003eDue Date\u003c/th\u003e\n              \u003cth\u003eAssigned To\u003c/th\u003e\n              \u003cth\u003eCategory\u003c/th\u003e\n              \u003cth\u003eActions\u003c/th\u003e\n            \u003c/tr\u003e\n          \u003c/thead\u003e\n          \u003ctbody\u003e\n            {tasks.map((task) =\u003e (\n              \u003ctr key={task.id}\u003e\n                \u003ctd\u003e{task.title}\u003c/td\u003e\n                \u003ctd\u003e{getPriorityBadge(task.priority)}\u003c/td\u003e\n                \u003ctd\u003e\n                  {isOverdue(task.due_date) ? (\n                    \u003cspan className=\"text-danger\"\u003e\n                      {formatDate(task.due_date)} (Overdue)\n                    \u003c/span\u003e\n                  ) : (\n                    formatDate(task.due_date)\n                  )}\n                \u003c/td\u003e\n                \u003ctd\u003e{task.assigned_user_name || 'Unassigned'}\u003c/td\u003e\n                \u003ctd\u003e{task.category_name || 'Uncategorized'}\u003c/td\u003e\n                \u003ctd\u003e\n                  \u003cButton\n                    variant=\"info\"\n                    size=\"sm\"\n                    onClick={() =\u003e handleShow(task)}\n                  \u003e\n                    View Details\n                  \u003c/Button\u003e\n                \u003c/td\u003e\n              \u003c/tr\u003e\n            ))}\n          \u003c/tbody\u003e\n        \u003c/Table\u003e\n      )}\n\n      \u003cModal show={showModal} onHide={handleClose} size=\"lg\"\u003e\n        {selectedTask \u0026\u0026 (\n          \u003c\u003e\n            \u003cModal.Header closeButton\u003e\n              \u003cModal.Title\u003e{selectedTask.title}\u003c/Modal.Title\u003e\n            \u003c/Modal.Header\u003e\n            \u003cModal.Body\u003e\n              \u003cdiv className=\"mb-3\"\u003e\n                \u003ch5\u003eDescription\u003c/h5\u003e\n                \u003cp\u003e{selectedTask.description || 'No description provided.'}\u003c/p\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"row mb-3\"\u003e\n                \u003cdiv className=\"col-md-4\"\u003e\n                  \u003ch5\u003ePriority\u003c/h5\u003e\n                  \u003cp\u003e{getPriorityBadge(selectedTask.priority)}\u003c/p\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"col-md-4\"\u003e\n                  \u003ch5\u003eDue Date\u003c/h5\u003e\n                  \u003cp\u003e\n                    {isOverdue(selectedTask.due_date) ? (\n                      \u003cspan className=\"text-danger\"\u003e\n                        {formatDate(selectedTask.due_date)} (Overdue)\n                      \u003c/span\u003e\n                    ) : (\n                      formatDate(selectedTask.due_date)\n                    )}\n                  \u003c/p\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"col-md-4\"\u003e\n                  \u003ch5\u003eStatus\u003c/h5\u003e\n                  \u003cp\u003e\n                    \u003cBadge bg=\"primary\"\u003e{selectedTask.status}\u003c/Badge\u003e\n                  \u003c/p\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n              \u003cdiv className=\"row\"\u003e\n                \u003cdiv className=\"col-md-6\"\u003e\n                  \u003ch5\u003eAssigned To\u003c/h5\u003e\n                  \u003cp\u003e{selectedTask.assigned_user_name || 'Unassigned'}\u003c/p\u003e\n                \u003c/div\u003e\n                \u003cdiv className=\"col-md-6\"\u003e\n                  \u003ch5\u003eCategory\u003c/h5\u003e\n                  \u003cp\u003e{selectedTask.category_name || 'Uncategorized'}\u003c/p\u003e\n                \u003c/div\u003e\n              \u003c/div\u003e\n            \u003c/Modal.Body\u003e\n            \u003cModal.Footer\u003e\n              \u003cButton variant=\"secondary\" onClick={handleClose}\u003e\n                Close\n              \u003c/Button\u003e\n            \u003c/Modal.Footer\u003e\n          \u003c/\u003e\n        )}\n      \u003c/Modal\u003e\n    \u003c/div\u003e\n  );\n};\n"
  }
}
